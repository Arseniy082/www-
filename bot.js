// === –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ===
const TelegramBot = require("node-telegram-bot-api");

// === ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
const TOKEN = "7562809822:AAH_z4iejnWardESYt6qv9qdiMIuyWcRFfs"; // –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –∏–∑ BotFather
const ADMIN_IDS = [7923034220]; // ID –∞–¥–º–∏–Ω–æ–≤

const DAY_SUPPORT = "@blockervddnet";   // –¥–Ω–µ–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
const NIGHT_SUPPORT = "@Sh1ncePr1nce";  // –Ω–æ—á–Ω–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä

// –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ–º—É –æ—Ç–∫–∞–∑–∞–Ω–æ
const deniedUsers = new Set();

// === –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ ===
const bot = new TelegramBot(TOKEN, { polling: true });

console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...");

// === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
const mainMenu = {
  reply_markup: {
    keyboard: [
      ["üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "üÜò –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"]
    ],
    resize_keyboard: true
  }
};

// === –ö–æ–º–∞–Ω–¥–∞ /start ===
bot.onText(/\/start/, async (msg) => {
  await bot.sendMessage(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëã –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:", mainMenu);
});

// === –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ===
bot.on("message", async (msg) => {
  if (msg.text === "üÜò –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏") {
    const text = `
üß∞ <b>–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>

üïê –î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞: ${DAY_SUPPORT}
üåô –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: ${NIGHT_SUPPORT}

–ü–∏—à–∏ –∏–º –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∫–ª–∞–Ω–∞ –∏ –∏–≥—Ä—ã üí¨
`;
    await bot.sendMessage(msg.chat.id, text, { parse_mode: "HTML" });
  }
});

// === –õ–æ–≥–∏–∫–∞ –∞–Ω–∫–µ—Ç—ã ===
const formState = new Map(); // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∞–Ω–∫–µ—Ç

const questions = [
  "1Ô∏è‚É£ –¢–≤–æ–π –Ω–∏–∫ –≤ DDNet:",
  "2Ô∏è‚É£ –¢–≤–æ—è —Ä–æ–ª—å –≤ –∏–≥—Ä–µ (–∫–æ–≥–µ—Ä –∏–ª–∏ –±–ª–æ–∫–µ—Ä):",
  "3Ô∏è‚É£ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∏–≥—Ä–µ (–∫–∞–∫ —á–∞—Å—Ç–æ –∏–≥—Ä–∞–µ—à—å?):",
  "4Ô∏è‚É£ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ DDNet:",
  "5Ô∏è‚É£ –ò–≥—Ä–∞–µ—à—å –ª–∏ —Ç—ã —Å —á–∏—Ç–∞–º–∏? (—á–µ—Å—Ç–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ üòâ)",
  "6Ô∏è‚É£ –ü–æ—á–µ–º—É —Ö–æ—á–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –∏–º–µ–Ω–Ω–æ –≤ –Ω–∞—à –∫–ª–∞–Ω BKWORLD? üí™",
  "7Ô∏è‚É£ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–∞–µ—à—å (–ü–ö, –Ω–æ—É—Ç –∏ —Ç.–ø.):",
  "8Ô∏è‚É£ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å):"
];

// === –ù–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã ===
bot.on("message", async (msg) => {
  const userId = msg.from.id;
  const chatId = msg.chat.id;

  if (msg.text === "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É") {
    if (deniedUsers.has(userId)) {
      return bot.sendMessage(chatId, "üö´ –¢–µ–±–µ –±—ã–ª–æ –æ—Ç–∫–∞–∑–∞–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–µ–ª—å–∑—è.");
    }

    formState.set(userId, { step: 0, answers: [] });
    await bot.sendMessage(chatId, questions[0]);
  }

  // === –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∫–µ—Ç—É ===
  const state = formState.get(userId);
  if (state) {
    const step = state.step;
    const answers = state.answers;

    if (step < questions.length && msg.text !== "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É") {
      answers.push(msg.text);
      state.step++;

      if (state.step < questions.length) {
        await bot.sendMessage(chatId, questions[state.step]);
      } else {
        // –ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞
        formState.delete(userId);

        const [nick, role, activity, hours, cheats, reason, device, extra] = answers;

        const text = `
üìã <b>–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞!</b>

1Ô∏è‚É£ –ù–∏–∫: ${nick}
2Ô∏è‚É£ –†–æ–ª—å: ${role}
3Ô∏è‚É£ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${activity}
4Ô∏è‚É£ –ß–∞—Å—ã: ${hours}
5Ô∏è‚É£ –ß–∏—Ç—ã: ${cheats}
6Ô∏è‚É£ –ü—Ä–∏—á–∏–Ω–∞: ${reason}
7Ô∏è‚É£ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${device}
8Ô∏è‚É£ –î–æ–ø. –∏–Ω—Ñ–æ: ${extra}

üë§ –û—Ç: @${msg.from.username || "–ë–µ–∑ –Ω–∏–∫–∞"} (ID: ${userId})
`;

        const opts = {
          parse_mode: "HTML",
          reply_markup: {
            inline_keyboard: [
              [
                { text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data: `accept_${userId}` },
                { text: "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å", callback_data: `deny_${userId}` }
              ]
            ]
          }
        };

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω–∞–º
        for (const adminId of ADMIN_IDS) {
          await bot.sendMessage(adminId, text, opts);
        }

        await bot.sendMessage(chatId, "‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π —Ä–µ—à–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.");
      }
    }
  }
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ ===
bot.on("callback_query", async (query) => {
  const [action, userIdStr] = query.data.split("_");
  const userId = parseInt(userIdStr);
  const msg = query.message;

  await bot.editMessageReplyMarkup({ inline_keyboard: [] }, { chat_id: msg.chat.id, message_id: msg.message_id });

  if (action === "accept") {
    await bot.sendMessage(userId, "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–±—è –ø—Ä–∏–Ω—è–ª–∏ –≤ –∫–ª–∞–Ω BKWORLD!\n–í—Å—Ç—É–ø–∞–π –≤ —á–∞—Ç: https://t.me/+gpOWA5NeDBFmMDhi");
    await bot.answerCallbackQuery(query.id, { text: "‚úÖ –ü—Ä–∏–Ω—è—Ç!" });
  } else {
    deniedUsers.add(userId);
    await bot.sendMessage(userId, "üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–µ–±–µ –æ—Ç–∫–∞–∑–∞–Ω–æ –≤–æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏.\n–ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É –Ω–µ–ª—å–∑—è.");
    await bot.answerCallbackQuery(query.id, { text: "‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ" });
  }
});